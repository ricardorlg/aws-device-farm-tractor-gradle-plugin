plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'com.gradle.plugin-publish' version '0.21.0'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.30.0'
}

group = 'io.github.ricardorlg'
version = '1.1.0'

ext {
    isReleasedVersion = !project.version.endsWith("-SNAPSHOT")
}

repositories {
    mavenCentral()
}

dependencies {

    implementation "software.amazon.awssdk:devicefarm:$aws_version"
    implementation "io.github.ricardorlg:devicefarm-tractor:$tractor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "io.arrow-kt:arrow-core:$arrow_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"

    testImplementation(gradleTestKit())

}

java {
    withSourcesJar()
    withJavadocJar()
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

jar {
    manifest {
        attributes("Implementation-Title": "Device Farm Tractor gradle plugin",
                "Implementation-Version": project.version.toString())
    }
}

pluginBundle {
    website = 'https://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin'
    vcsUrl = 'https://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin'
    tags = ['appium', 'Serenity BDD', 'AWS device famr']
}

gradlePlugin {
    plugins {
        deviceFarmTractorGradlePlugin {
            id = "io.github.ricardorlg.DeviceFarmTractorGradlePlugin"
            displayName = 'AWS Device farm tractor gradle plugin'
            description = 'Run Serenity BDD appium tests on AWS Device farm'
            implementationClass = 'io.github.ricardorlg.devicefarm.tractor.gradle.DeviceFarmTractorGradlePlugin'
        }
    }
}

publishing {
    repositories {
        maven {
            name = "MavenCentral"
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }

            if (!isReleasedVersion) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }
        }

        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        deviceFarmTractorGradlePlugin(MavenPublication) {
            from components.java
            pom {
                name = "Device Farm Tractor Gradle plugin"
                description = "Run Serenity BDD appium tests in AWS device farm using gradle"
                url = "https://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin"
                scm {
                    connection = "scm:git:git@github.com:ricardorlg/aws-device-farm-tractor-gradle-plugin.git"
                    developerConnection = "scm:git:ssh://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin.git"
                    url = "https://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin"
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/ricardorlg/aws-device-farm-tractor-gradle-plugin/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'ricardorlg'
                        name = 'Ricardo Larrahondo'
                        email = 'ricardolarrahondo2@hotmail.com'

                    }
                }

            }
        }
    }
}

signing {
    sign publishing.publications.deviceFarmTractorGradlePlugin
}
nexusStaging {
    username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
    password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
}

test {
    useJUnitPlatform()
}